

const fetch = require('node-fetch');
const config = require('../config');    
const { cmd } = require('../command');

cmd({
    pattern: "repo",
    alias: ["sc", "script"],
    desc: "Fetch information about a GitHub repository.",
    react: "‚ùÑÔ∏è",
    category: "info",
    filename: __filename,
},
async (conn, mek, m, { from, reply }) => {
    const githubRepoURL = 'https://github.com/kingmalvn/MALVIN-XD';

    try {
        // Extract username and repo name from the URL
        const [, username, repoName] = githubRepoURL.match(/github\.com\/([^/]+)\/([^/]+)/);

        // Fetch repository details using GitHub API
        const response = await fetch(`https://api.github.com/repos/${username}/${repoName}`);
        
        if (!response.ok) {
            throw new Error(`GitHub API request failed with status ${response.status}`);
        }

        const repoData = await response.json();

        // Format the repository information
        const formattedInfo = `
  * ú·¥á ü ü·¥è ·¥õ ú·¥á Ä·¥á, ·¥ç·¥Ä ü·¥†…™…¥ x·¥Ö ·¥ús·¥á Ä! üëã* 

*ùëáùíâùëéùëõùëòùë† ùëìùëúùëü ùë¢ùë†ùëñùëõùëî ·¥ç·¥Ä ü·¥†…™…¥ x·¥Ö ·¥†3üåπü´∂* 
‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚ä∑
‚îä üöÄ ·¥ç·¥Ä ü·¥†…™…¥ x·¥Ö  Ä·¥á·¥ò·¥è …™…¥“ì·¥è üöÄ
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚ä∑
‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚ä∑
‚îáü§ñ *…¥·¥Ä·¥ç·¥á:* ${repoData.name}
‚îá‚≠ê *·¥õ·¥è·¥õ·¥Ä ü s·¥õ·¥Ä Äs:* ${repoData.stargazers_count}
‚îáüë•Ô∏è *·¥Ö·¥Ä…™ ü è ·¥ús·¥á Äs:* ${repoData.forks_count}
‚îáüëÄ *·¥°·¥Ä·¥õ·¥Ñ ú·¥á Äs:* 2
‚îáüë§ *·¥è·¥°…¥·¥á Ä:* s…™ Ä ${repoData.owner.login}
‚îáü™Ä *·¥Ö·¥ás·¥Ñ Ä…™·¥ò·¥õ…™·¥è…¥:* ${repoData.description || 'No description'}
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚ä∑

> ·¥Ö·¥è…¥'·¥õ “ì·¥è Ä…¢·¥á·¥õ ·¥õ·¥è s·¥õ·¥Ä Ä & “ì·¥è Ä·¥ã ·¥õ ú·¥á  Ä·¥á·¥ò·¥èüåüüç¥

‚îã  Ä·¥á·¥ò·¥è  ü…™…¥·¥ã: https://tinyurl.com/2yeb2ehy
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚ä∑

> s·¥õ·¥Ä è ·¥Ñ·¥è…¥…¥·¥á·¥Ñ·¥õ·¥á·¥Ö “ì·¥è Ä “ì·¥Ä…¥·¥õ·¥Äs·¥õ…™·¥Ñ ·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥ás!`;

        // Send an image with the formatted info as a caption and context info
        await conn.sendMessage(from, {
            image: { url: `https://files.catbox.moe/y65ffs.jpg` },
            caption: formattedInfo,
            contextInfo: { 
                    mentionedJid: [m.sender],
                    forwardingScore: 999,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterJid: '120363306168354073@newsletter',
                        newsletterName: '·¥ç·¥Ä ü·¥†…™…¥ x·¥Ö  Ä·¥á·¥ò·¥è',
                        serverMessageId: 143
                }
            }
        }, { quoted: mek });

    } catch (error) {
        console.error("Error in repo command:", error);
        reply("Sorry, something went wrong while fetching the repository information. Please try again later.");
    }
});
